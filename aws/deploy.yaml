AWSTemplateFormatVersion: "2010-09-09"
Resources:
  VPC:
    Type: "AWS::EC2::VPC"
    Properties:
      CidrBlock: "10.0.0.0/16"
      Tags:
        - Key: "Name"
          Value: "ecsdemo"
  InternetGateway:
    Type: "AWS::EC2::InternetGateway"
    Properties:
      Tags:
        - Key: "Name"
          Value: "ecsdemo-igw"

  VPCGatewayAttachment:
    Type: "AWS::EC2::VPCGatewayAttachment"
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  PublicSubnet:
    Type: "AWS::EC2::Subnet"
    Properties:
      VpcId: !Ref VPC
      CidrBlock: "10.0.1.0/24"
      AvailabilityZone: "us-east-1a"
      MapPublicIpOnLaunch: true
      Tags:
        - Key: "Name"
          Value: "ecsdemo-public-subnet"

  PrivateSubnet:
    Type: "AWS::EC2::Subnet"
    Properties:
      VpcId: !Ref VPC
      CidrBlock: "10.0.2.0/24"
      AvailabilityZone: "us-east-1a"
      Tags:
        - Key: "Name"
          Value: "ecsdemo-private-subnet"

  PublicRouteTable:
    Type: "AWS::EC2::RouteTable"
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: "Name"
          Value: "ecsdemo-public-rt"

  PublicRoute:
    Type: "AWS::EC2::Route"
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: "0.0.0.0/0"
      GatewayId: !Ref InternetGateway

  PublicSubnetRouteTableAssociation:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      SubnetId: !Ref PublicSubnet
      RouteTableId: !Ref PublicRouteTable

  NATGateway:
    Type: "AWS::EC2::NatGateway"
    Properties:
      SubnetId: !Ref PublicSubnet
      AllocationId: !GetAtt EIPForNAT.AllocationId
    DependsOn: InternetGateway

  EIPForNAT:
    Type: "AWS::EC2::EIP"
    Properties:
      Domain: "vpc"

  PrivateRouteTable:
    Type: "AWS::EC2::RouteTable"
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: "Name"
          Value: "ecsdemo-private-rt"

  PrivateRoute:
    Type: "AWS::EC2::Route"
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      DestinationCidrBlock: "0.0.0.0/0"
      NatGatewayId: !Ref NATGateway

  PrivateSubnetRouteTableAssociation:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      SubnetId: !Ref PrivateSubnet
      RouteTableId: !Ref PrivateRouteTable

  BackendSecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: "Allow inbound traffic on port 3000 for the backend app"
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: "tcp"
          FromPort: 3000
          ToPort: 3000
          CidrIp: "0.0.0.0/0" 

  MySQLSecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: "Allow inbound traffic on port 3306 for the MySQL database"
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: "tcp"
          FromPort: 3306
          ToPort: 3306
          SourceSecurityGroupId: !Ref BackendSecurityGroup

  ECSCluster:
    Type: "AWS::ECS::Cluster"
    Properties:
      ClusterName: "ECSdemoCluster"

  ECSTaskExecutionRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service: "ecs-tasks.amazonaws.com"
            Action: "sts:AssumeRole"
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy"
      RoleName: "ecsdemoTaskExecutionRole"

  ServiceDiscoveryNamespace:
    Type: "AWS::ServiceDiscovery::PrivateDnsNamespace"
    Properties:
      Name: "ecsdemo.local"
      Vpc: !Ref VPC
      Description: "Namespace for ECS demo services"

  BackendService:
    Type: "AWS::ECS::Service"
    Properties:
      ServiceName: "backend-service"
      Cluster: !Ref ECSCluster
      DesiredCount: 1
      LaunchType: "FARGATE"
      TaskDefinition: !Ref BackendTaskDefinition
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: "ENABLED"
          Subnets:
            - !Ref PublicSubnet
          SecurityGroups:
            - !Ref BackendSecurityGroup
      ServiceRegistries:
        - RegistryArn: !GetAtt ServiceDiscoveryNamespace.Arn

  MySQLService:
    Type: "AWS::ECS::Service"
    Properties:
      ServiceName: "mysql-service"
      Cluster: !Ref ECSCluster
      DesiredCount: 1
      LaunchType: "FARGATE"
      TaskDefinition: !Ref MySQLTaskDefinition
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: "DISABLED"
          Subnets:
            - !Ref PrivateSubnet
          SecurityGroups:
            - !Ref MySQLSecurityGroup
      ServiceRegistries:
        - RegistryArn: !GetAtt ServiceDiscoveryNamespace.Arn

  BackendTaskDefinition:
    Type: "AWS::ECS::TaskDefinition"
    Properties:
      Family: "backend-ecs-demo-task"
      NetworkMode: "awsvpc"
      ContainerDefinitions:
        - Name: "backend-container"
          Image: "576997243977.dkr.ecr.us-east-1.amazonaws.com/ecsdemo:latest"
          Memory: 512
          Cpu: 256
          PortMappings:
            - ContainerPort: 3000
              HostPort: 3000
              Protocol: "tcp"
          Essential: true
          Environment:
            - Name: "DB_HOST"
              Value: !Sub "mysql-service.${ServiceDiscoveryNamespace.Name}"
            - Name: "DB_USER"
              Value: "root"
            - Name: "DB_PASSWORD"
              Value: "password123"
            - Name: "DB_NAME"
              Value: "ecsdb"
          LogConfiguration:
            LogDriver: "awslogs"
            Options:
              awslogs-group: "/ecs/ecsdemo"
              awslogs-region: "us-east-1"
              awslogs-stream-prefix: "ecs"
      RequiresCompatibilities:
        - "FARGATE"
      Cpu: "256"
      Memory: "512"
      ExecutionRoleArn: !GetAtt ECSTaskExecutionRole.Arn
      TaskRoleArn: !GetAtt ECSTaskExecutionRole.Arn

  MySQLTaskDefinition:
    Type: "AWS::ECS::TaskDefinition"
    Properties:
      Family: "mysql-task"
      NetworkMode: "awsvpc"
      ContainerDefinitions:
        - Name: "mysql-db"
          Image: "mysql:latest"
          Memory: 512
          Cpu: 256
          Essential: true
          Environment:
            - Name: "MYSQL_ROOT_PASSWORD"
              Value: "password123"
            - Name: "MYSQL_DATABASE"
              Value: "ecsdb"
          PortMappings:
            - ContainerPort: 3306
              HostPort: 3306
              Protocol: "tcp"
          LogConfiguration:
            LogDriver: "awslogs"
            Options:
              awslogs-group: "/ecs/mysql"
              awslogs-region: "us-east-1"
              awslogs-stream-prefix: "ecs"
      RequiresCompatibilities:
        - "FARGATE"
      Cpu: "256"
      Memory: "512"
      ExecutionRoleArn: !GetAtt ECSTaskExecutionRole.Arn
      TaskRoleArn: !GetAtt ECSTaskExecutionRole.Arn

  CloudWatchLogGroupBackend:
    Type: "AWS::Logs::LogGroup"
    Properties:
      LogGroupName: "/ecs/ecsdemo"
      RetentionInDays: 7

  CloudWatchLogGroupMySQL:
    Type: "AWS::Logs::LogGroup"
    Properties:
      LogGroupName: "/ecs/mysql"
      RetentionInDays: 7
